{"version":3,"file":"component---src-templates-post-list-js-c1e1546194fe76c034b1.js","mappings":"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","sources":["webpack://gatsby-starter-developer-diary/./src/components/sidebar/Bio.js","webpack://gatsby-starter-developer-diary/./src/components/sidebar/SocialLinks.js","webpack://gatsby-starter-developer-diary/./src/components/sidebar/TechTags.js","webpack://gatsby-starter-developer-diary/./src/components/sidebar/Sidebar.js","webpack://gatsby-starter-developer-diary/./src/components/tags/TechTag.js","webpack://gatsby-starter-developer-diary/./src/templates/post-list.js"],"sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport profile from \"../../images/profile.png\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <img src={profile} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio","import React from \"react\"\nimport {\n  FaLinkedin,\n  FaGithubSquare,\n  FaStackOverflow,\n  FaFreeCodeCamp,\n  FaTwitterSquare,\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\nconst SocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"side-social-links float-left mt-3 mb-3\">\n      <a className=\"text-secondary p-2\" href={contacts.github}>\n        <span title=\"GitHub\">\n          <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks\n","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n    const labels = props.labels\n    const posts = props.posts\n\n    const labelCount = labels.map(label => {\n        let count = 0;\n        posts.forEach(post => {\n            if (post.node.frontmatter.tags.includes(label.tag)) {\n                count = count + 1\n            }\n        })\n        return [label.tag, count]\n    })\n\n    const categories = labelCount.filter(label => {\n        return label[1] > 0\n    })\n\n    const tags = categories.map(category => {\n        return category[0]\n    })\n\n\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <>\n            <h4>Tech Topics</h4>\n            <div className=\"d-block\">\n                {getTechTags(tags)}\n            </div>\n        </>\n    )\n}\n\n\nexport default TechTags","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                github\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\";\n\nconst TechTag = (props) => {\n    const { tag, tech, name, size, color } = props\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{fill: `${color}`}}>\n                            <title>{tech}</title>\n                            <path\n                                d={name} />\n                        </svg></div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"../pages/index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst PostList = (props) => {\n    const posts = props.data.allMarkdownRemark.edges\n    const labels = props.data.site.siteMetadata.labels\n    const { currentPage, numPages } = props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : \"/\" + (currentPage - 1).toString()\n    const nextPage = \"/\" + (currentPage + 1).toString()\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-4 py-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"post-list-main\">\n                    {posts.map((post) => {\n                        const tags = post.node.frontmatter.tags\n                        return (\n                            <div key={post.node.id} className=\"container mt-5\">\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-dark\"\n                                >\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                                </Link>\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                                </small>\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-primary\"\n                                >\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\n                                </Link>\n                                <div className=\"d-block\">\n                                    {getTechTags(tags)}\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <div className=\"text-center mt-4\">\n                        {!isFirst && (\n                            <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark\">← Previous Page</span>\n                            </Link>\n                        )}\n                        {!isLast && (\n                            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n                                <span className=\"text-dark ml-5\">Next Page →</span>\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport const listQuery = graphql`\n         query paginateQuery($skip: Int!, $limit: Int!) {\n           site {\n             siteMetadata {\n               title \n               author\n               labels {\n                 tag\n                 tech \n                 name \n                 size \n                 color\n               } \n             }\n           }\n           allMarkdownRemark(\n             limit: $limit\n             skip: $skip\n             sort: { fields: [frontmatter___date], order: DESC }\n             filter: { frontmatter: { published: { eq: true } } }\n           ) {\n             totalCount\n             edges {\n               node {\n                 excerpt(pruneLength: 200)\n                 html\n                 id\n                 frontmatter {\n                   title\n                   date(formatString: \"MMMM DD, YYYY\")\n                   tags\n                 }\n                 fields {\n                   slug\n                 }\n               }\n             }\n           }\n         }\n       `\n\nexport default PostList\n"],"names":["author","tagline","className","src","profile","style","maxWidth","alt","contacts","href","github","title","size","color","props","labels","posts","tags","map","label","count","forEach","post","node","frontmatter","includes","tag","filter","category","techTags","i","push","TechTag","key","tech","name","getTechTags","StaticQuery","query","render","data","site","siteMetadata","Link","to","allMarkdownRemark","edges","fontSize","role","viewBox","xmlns","width","height","fill","d","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","keywords","id","fields","slug","date","excerpt","rel","textDecoration"],"sourceRoot":""}